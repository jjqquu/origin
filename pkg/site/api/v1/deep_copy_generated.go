// +build !ignore_autogenerated_openshift

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package v1

import (
	api "k8s.io/kubernetes/pkg/api"
	unversioned "k8s.io/kubernetes/pkg/api/unversioned"
	api_v1 "k8s.io/kubernetes/pkg/api/v1"
	conversion "k8s.io/kubernetes/pkg/conversion"
)

func init() {
	if err := api.Scheme.AddGeneratedDeepCopyFuncs(
		DeepCopy_v1_Site,
		DeepCopy_v1_SiteAddress,
		DeepCopy_v1_SiteList,
		DeepCopy_v1_SiteSpec,
		DeepCopy_v1_SiteStatus,
		DeepCopy_v1_StringSource,
		DeepCopy_v1_StringSourceSpec,
	); err != nil {
		// if one of the deep copy functions is malformed, detect it immediately.
		panic(err)
	}
}

func DeepCopy_v1_Site(in Site, out *Site, c *conversion.Cloner) error {
	if err := unversioned.DeepCopy_unversioned_TypeMeta(in.TypeMeta, &out.TypeMeta, c); err != nil {
		return err
	}
	if err := api_v1.DeepCopy_v1_ObjectMeta(in.ObjectMeta, &out.ObjectMeta, c); err != nil {
		return err
	}
	if err := DeepCopy_v1_SiteSpec(in.Spec, &out.Spec, c); err != nil {
		return err
	}
	if err := DeepCopy_v1_SiteStatus(in.Status, &out.Status, c); err != nil {
		return err
	}
	return nil
}

func DeepCopy_v1_SiteAddress(in SiteAddress, out *SiteAddress, c *conversion.Cloner) error {
	out.Url = in.Url
	return nil
}

func DeepCopy_v1_SiteList(in SiteList, out *SiteList, c *conversion.Cloner) error {
	if err := unversioned.DeepCopy_unversioned_TypeMeta(in.TypeMeta, &out.TypeMeta, c); err != nil {
		return err
	}
	if err := unversioned.DeepCopy_unversioned_ListMeta(in.ListMeta, &out.ListMeta, c); err != nil {
		return err
	}
	if in.Items != nil {
		in, out := in.Items, &out.Items
		*out = make([]Site, len(in))
		for i := range in {
			if err := DeepCopy_v1_Site(in[i], &(*out)[i], c); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

func DeepCopy_v1_SiteSpec(in SiteSpec, out *SiteSpec, c *conversion.Cloner) error {
	out.Type = in.Type
	if err := DeepCopy_v1_SiteAddress(in.Address, &out.Address, c); err != nil {
		return err
	}
	if err := DeepCopy_v1_StringSource(in.Credential, &out.Credential, c); err != nil {
		return err
	}
	if in.Finalizers != nil {
		in, out := in.Finalizers, &out.Finalizers
		*out = make([]api_v1.FinalizerName, len(in))
		for i := range in {
			(*out)[i] = in[i]
		}
	} else {
		out.Finalizers = nil
	}
	return nil
}

func DeepCopy_v1_SiteStatus(in SiteStatus, out *SiteStatus, c *conversion.Cloner) error {
	out.Phase = in.Phase
	out.SiteMeta = in.SiteMeta
	out.SiteAgentAddress = in.SiteAgentAddress
	return nil
}

func DeepCopy_v1_StringSource(in StringSource, out *StringSource, c *conversion.Cloner) error {
	if err := DeepCopy_v1_StringSourceSpec(in.StringSourceSpec, &out.StringSourceSpec, c); err != nil {
		return err
	}
	return nil
}

func DeepCopy_v1_StringSourceSpec(in StringSourceSpec, out *StringSourceSpec, c *conversion.Cloner) error {
	out.Value = in.Value
	out.Env = in.Env
	out.File = in.File
	out.KeyFile = in.KeyFile
	return nil
}
