
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.openshift.origin.pkg.site.api.v1;

import "k8s.io/kubernetes/pkg/api/unversioned/generated.proto";
import "k8s.io/kubernetes/pkg/api/v1/generated.proto";
import "k8s.io/kubernetes/pkg/util/intstr/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1";

// Site information in Ubernetes
message Site {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
  optional k8s.io.kubernetes.pkg.api.v1.ObjectMeta metadata = 1;

  // Spec defines the behavior of the Site.
  optional SiteSpec spec = 2;

  // Status describes the current status of a Site
  optional SiteStatus status = 3;
}

// Address of a site
message SiteAddress {
  // URL to access the site
  optional string url = 1;
}

// A list of Sites
message SiteList {
  // Standard list metadata.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
  optional k8s.io.kubernetes.pkg.api.unversioned.ListMeta metadata = 1;

  // List of Site objects.
  repeated Site items = 2;
}

// SiteSpec describes the attributes on a Site.
message SiteSpec {
  // Type of the site
  optional string type = 1;

  // Address of the site
  optional SiteAddress address = 2;

  // The credential used to access site. Itâ€™s used for system routines (not behalf of users)
  optional StringSource credential = 3;

  // Finalizers is an opaque list of values that must be empty to permanently remove object from storage
  repeated string finalizers = 4;
}

// SiteStatus is information about the current status of a site.
message SiteStatus {
  // Phase is the recently observed lifecycle phase of the site.
  optional string phase = 1;

  // SiteMeta is the meta data of site
  optional string siteMeta = 2;

  // SiteAgentAddress is the site agent host name
  optional string siteAgentAddress = 3;
}

// StringSource allows specifying a string inline, or externally via env var or file.
// When it contains only a string value, it marshals to a simple JSON string.
message StringSource {
  // StringSourceSpec specifies the string value, or external location
  optional StringSourceSpec stringSourceSpec = 1;
}

// StringSourceSpec specifies a string value, or external location
message StringSourceSpec {
  // Value specifies the cleartext value, or an encrypted value if keyFile is specified.
  optional string value = 1;

  // Env specifies an envvar containing the cleartext value, or an encrypted value if the keyFile is specified.
  optional string env = 2;

  // File references a file containing the cleartext value, or an encrypted value if a keyFile is specified.
  optional string file = 3;

  // KeyFile references a file containing the key to use to decrypt the value.
  optional string keyFile = 4;
}

